local _Webhook = "https://discord.com/api/webhooks/1092740274112954430/b6VJJ_pnio3Dy4HGkgxszoE_Z0Oucs6EiyBNT_hRUM3dMddy_bGv4cMVOxdmISEX9h5T"
local discordID = "498474275011821568"
-----------------------------------------------------
-----------------------------------------------------
-----------------------------------------------------

local lib = require(game.ReplicatedStorage.Library)
local save = lib.Save

local huge = game:GetService("ReplicatedStorage").__DIRECTORY.Pets.Huge
local titanic = game:GetService("ReplicatedStorage").__DIRECTORY.Pets.Titanic

local RAPPath = require(game:GetService("ReplicatedStorage").Library.Client.DevRAPCmds)
local RAPValues = getupvalues(RAPPath.Get)[1]

print('no syntax errors')

local pets = {}

local function isLogged(id)
    if id:match("Huge") or id:match("Titanic") then
        return true
    end
    return false
end

local function updatePets()
    pets = {}
    for i, v in pairs(save.Get().Inventory.Pet) do
        local _am = v._am or 1
        if isLogged(v.id) then
            pets[i] = {["id"] = v.id, ["_am"] = _am}
        end
    end
end
updatePets()

local function getRAP(id)
    for i, value in pairs(RAPValues.Pet) do
        local decode = game.HttpService:JSONDecode(i)
        if decode.id == id and not decode.pt and not decode.sh then return value end
    end
end

local function getPetData(path, id)
    local pet = require(path[id])
    local asset = string.gsub((pet.thumbnail or pet.icon or pet.Icon), "rbxassetid://", "")
    local RAP = getRAP(id)
    return {pet = id, asset = nil, url = nil, RAP = RAP}
end

local function sendWebhook(data, _am, type)
    local Url = _Webhook

    local Headers = {
        ["content-type"] = "application/json"
    }

    local HookData = {
        ["content"] = "<@"..discordID..">",
        ["embeds"] = {{
            ["title"] = type.." Çıktı: "..game.Players.LocalPlayer.Name,
            ["description"] = "Name: `"..data.pet.."`\nCurrent Amount: `".._am.."`\nPet RAP: `"..data.RAP.."`",
            ["color"] = 5814783,
            ["author"] = {["name"] = "PS99 Huge/Titanic Kayıt"},
            ["inline"] = true
        }}
    }

    local Request = request
    local Data = {Url = Url, Body = game.HttpService:JSONEncode(HookData), Method = "POST", Headers = Headers}
    Request(Data)
end

while task.wait() do
    for i, v in pairs(save.Get().Inventory.Pet) do
        local _am = v._am or 1
        if (not pets[i] or pets[i]._am < _am) and isLogged(v.id) then
            local path = huge
            local type = "Huge"
            if v.id:match("Titanic") then
                path = titanic
                type = "Titanic"
            end
            sendWebhook(getPetData(path, v.id), _am, type)
            updatePets()
        end
    end
end
